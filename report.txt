For my scheduling algorithm I implemented a "shortest job first" (SJF) approach. The algorithm works
by preferencing the process with the shortest runtime in the queue. This allows an improvement
in turnaround time and time overhead as the average time processes spend waiting to be run is
reduced. Comparing it to the baselines,  One issue that could occur with SJF is having a process 
with a long run-time having to wait if shorter processes are continually added.

For my memory management algorithm my approach evicts the process in memory with the largest size. 
This minimises the turnaround time for processes in the queue as it allows for more processes to be run after an eviction.
A situation in which this would not work though is when you had a lot of smaller sized processes and one large process. The 
large process would continually be evicted and as such its turnaround time would be large.